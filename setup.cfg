[aliases]
test=pytest


# Instead of pytest.ini
[tool:pytest]
norecursedirs = build docs/_build *.egg .tox *.venv tests/dummy*
addopts =
    # Shows a line for every test
    # You probably want to turn this off if you use pytest-sugar.
    # Or you can keep it and run `py.test -q`.
    --verbose

    # Shorter tracebacks are sometimes easier to read: short
    --tb=auto

    # Turn on --capture to have brief, less noisy output.
    # You will only see output if the test fails.
    # Use --capture no (same as -s) if you want to see it all or have problems
    # debugging.
    # --capture=fd
    # --capture=no

    # Show extra test summary info as specified by chars (f)ailed, (E)error, (s)skipped, (x)failed, (X)passed.
    -rfEsxX

    # Output test results to junit.xml for Jenkins to consume
    # --junitxml=junit.xml

    # Measure code coverage
    --cov=pygsod --cov-branch --cov-report=xml --cov-report=term-missing tests

[flake8]
max-line-length = 120
max-complexity = 18
ignore = E203, E266, W503
docstring-convention = google
per-file-ignores = __init__.py:F401
exclude = .git,
    __pycache__,
    setup.py,
    build,
    dist,
    docs,
    releases,
    .venv,
    .tox,
    .mypy_cache,
    .pytest_cache,
    .vscode,
    .github,
    # By default test codes will be linted.
    # tests

[mypy]
ignore_missing_imports = True

[coverage:run]
# uncomment the following to omit files during running
#omit =
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    def main
